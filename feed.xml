<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Malg:eon</title>
    <description>공간</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 30 Jul 2020 12:14:38 +0000</pubDate>
    <lastBuildDate>Thu, 30 Jul 2020 12:14:38 +0000</lastBuildDate>
    <generator>Jekyll v4.1.1</generator>
    
      <item>
        <title>Kotlin - [1]</title>
        <description>&lt;h2 id=&quot;변수&quot;&gt;변수&lt;/h2&gt;
&lt;p&gt;val(value) - 불변형 (immutable)
  var(variable) - 가변형 (mutable)&lt;/p&gt;

&lt;p&gt;val username(: String - 컴파일에서 추론 가능할 경우 생략 가능) = “Eon”&lt;/p&gt;

&lt;p&gt;따라서 단순 선언 같은 경우 추론이 불가능하므로 생략 불가&lt;/p&gt;

&lt;h2 id=&quot;자료형&quot;&gt;자료형&lt;/h2&gt;

&lt;h3 id=&quot;기본형primitive-data-type&quot;&gt;기본형(primitive data type)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;보통 코틀린에서는 사용하지 않으나 자바에서 사용하므로 알아두자&lt;/li&gt;
  &lt;li&gt;int, long, float, double&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;참조형reference-type&quot;&gt;참조형(reference type)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;동적 공간에 데이터를 둔 다음 이것을 참조하는 자료형&lt;/li&gt;
  &lt;li&gt;Int, Long, Float, Double&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;자료형-추론&quot;&gt;자료형 추론&lt;/h3&gt;
&lt;p&gt;123 =&amp;gt; Int
123L =&amp;gt; Long (접미사 L)
123F =&amp;gt; Float (접미사 F)
0x0F =&amp;gt; 16진수 Int (접두사 0x)
0b00001011 =&amp;gt; 2진수 Int (접두사 0b)&lt;/p&gt;

&lt;p&gt;작은 값을 사용하고자 하면 자료형을 명시적으로 지정해주자.&lt;/p&gt;

&lt;p&gt;숫자 자료형을 경우 사이에 언더바는 아무런 영향을 주지 않는다. 그냥 자릿수 확인으로 사용 가능&lt;/p&gt;

&lt;p&gt;큰수일 경우 3.14E + 16 이런식으로 사용&lt;/p&gt;

&lt;p&gt;코틀린에서는 부동 소수점을 표현할 때, 지수부와 가수부로 나뉘어 저장된다. 이러한 부동 소수점에 대해 연산을 하게 될 경우 공간 제약으로 인해 정확한 값을 return하지 않는다. 유념해서 설계하자.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Double&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;999&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//100.09999...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;문자열-자료형&quot;&gt;문자열 자료형&lt;/h3&gt;

&lt;p&gt;문자열은 String으로 선언되며 String Pool 이라는 공간에 구성된다. 이때 참조형 변수이기 때문에, 변수를 선언할 경우 Heap에 값은 String Pool 저장되게 되며 이 값은 변경되지 않는다. 즉, 만일 값이 같은 변수를 선언할 경우 똑같은 참조이게 된다.&lt;/p&gt;

&lt;p&gt;코틀린에서 [== : 값비교] [=== : 참조까지 비교]&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;World&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  
  &lt;span class=&quot;nx&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;str1 === str2: ${str1 === str2}&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// false&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;str1 === str3: ${str1 === str3}&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;### 표현식에서 문자열&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;a = $a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;a = ${a +2}&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  
  &lt;span class=&quot;nx&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;str1: &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$str1&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, str2: &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;$str2&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// &quot;를 print하고 싶다면 [\&quot;] 이렇게 쓰면 된다.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Thu, 30 Jul 2020 00:00:00 +0000</pubDate>
        <link>/study_kotlin_1/</link>
        <guid isPermaLink="true">/study_kotlin_1/</guid>
        
        <category>kotlin</category>
        
        
        <category>study</category>
        
      </item>
    
      <item>
        <title>Kotlin 시작</title>
        <description>&lt;h2 id=&quot;코틀린을-배워보자&quot;&gt;코틀린을 배워보자.&lt;/h2&gt;

&lt;p&gt;코틀린이란 언어에 대해 알아보게 되어서야 현재 java의 status를 알수 있었다. 단순히 학업의 목적으로 java를 이해하고 있었을 적엔 jdk에 대하여 별다른 신경을 쓰지 않았으나, 공부를 좀 더 해가면서 jdk이는 더 이상 무료가 아니게 되었으며, 이에 대한 나비효과로 kotlin은 더욱 각광을 받고 있음을 알게 되었다.&lt;/p&gt;

&lt;p&gt;개인적으로 앱개발에 대해 호기심을 가지고 있었으며, 함수형 프로그래밍이 가능함과 동시에 레거시 java 프로그램들도 전체 커버가 가능하다는 장점이 현재 코틀린을 배우려는 생각을 갖게 하는데 결정적이었다.&lt;/p&gt;

&lt;h2 id=&quot;부스트코스-코틀린-프로그래밍&quot;&gt;부스트코스 코틀린 프로그래밍&lt;/h2&gt;

&lt;p&gt;이런 생각을 가질즈음 부스트 코스에서도 코틀린 프로그래밍 강의가 새로 열렸다. 단순히 언어를 배우는데 끝나는 것이 아닌 3단계로 나뉘어서 함수형 - 객체지향형 - 응용(앱 만들기) 강의가 진행하고 있다.&lt;/p&gt;

&lt;p&gt;해당 강의에서는 azul에서 제공하는 zulu builds of openJDK를 사용하고, 개발 환경으로는 Intellij를 사용한다. 모두 처음해보는 생소한 것이나, 이클립스와 비교를 해보는 등의 재미가 있을것으로 생각 되어 즐거운 마음으로 진행하고자 한다.&lt;/p&gt;

&lt;p&gt;이후 코틀린에 대해 공부하며, 기억해야 할 것들을 정리해서 포스팅 할 예정이다.&lt;/p&gt;

&lt;p&gt;모두 배우고 나면 코틀린으로 알고리즘 문제를 풀수 있기를 희망한다.&lt;/p&gt;

</description>
        <pubDate>Wed, 29 Jul 2020 00:00:00 +0000</pubDate>
        <link>/study_kotlin_start/</link>
        <guid isPermaLink="true">/study_kotlin_start/</guid>
        
        <category>kotlin</category>
        
        
        <category>study</category>
        
      </item>
    
      <item>
        <title>IntelliJ</title>
        <description>&lt;p&gt;font : D2coding(네이버 제공)
ctrl + Mouse : font 크기 조절 활성화&lt;/p&gt;

&lt;h2 id=&quot;도구-창의-단축키--윈도우맥&quot;&gt;도구 창의 단축키 : 윈도우(맥)&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Messages Alt + 0 (Cmd + 0)&lt;/li&gt;
  &lt;li&gt;Project  Alt + 1 (Cmd + 1)&lt;/li&gt;
  &lt;li&gt;Favorites    Alt + 2 (Cmd + 2)&lt;/li&gt;
  &lt;li&gt;Run  Alt + 4 (Cmd + 4)&lt;/li&gt;
  &lt;li&gt;Debug    Alt + 5 (Cmd + 5)&lt;/li&gt;
  &lt;li&gt;TODO Alt + 6 (Cmd + 6)&lt;/li&gt;
  &lt;li&gt;Structure    Alt + 7 (Cmd + 7)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Terminal Alt + F12 (Option + F12)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;자동 줄 복사 Ctrl + D&lt;/li&gt;
  &lt;li&gt;실행 Ctrl + Shift + F10&lt;/li&gt;
  &lt;li&gt;새 파일 생성 Alt + Insert&lt;/li&gt;
  &lt;li&gt;추론 타입 확인 : Ctrl + Shift + P&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;함수의-console-library-확인&quot;&gt;함수의 console Library 확인&lt;/h2&gt;
&lt;p&gt;함수위에서 Ctrl + B * 2 =&amp;gt; 자바 라이브러리&lt;/p&gt;

&lt;h2 id=&quot;java로-변환&quot;&gt;java로 변환&lt;/h2&gt;
&lt;p&gt;Tools -&amp;gt; Kotlin -&amp;gt; Show Kotlin Bytecode&lt;/p&gt;

&lt;p&gt;매뉴에서 Decomplie 클릭.&lt;/p&gt;

&lt;h2 id=&quot;인자를-받는-main문에-인자-넣기&quot;&gt;인자를 받는 main문에 인자 넣기&lt;/h2&gt;

&lt;p&gt;우측 상단에 Run 좌측 배너를 클릭하여 Edit Configuration 클릭
 Program Argument가 넣을 인자.&lt;/p&gt;
</description>
        <pubDate>Wed, 29 Jul 2020 00:00:00 +0000</pubDate>
        <link>/study_aboutintellij/</link>
        <guid isPermaLink="true">/study_aboutintellij/</guid>
        
        <category>java</category>
        
        <category>kotlin</category>
        
        
        <category>study</category>
        
      </item>
    
      <item>
        <title>Github page &amp; Jekyll Blog 제작</title>
        <description>&lt;h1 id=&quot;블로그-제작-과정&quot;&gt;블로그 제작 과정!&lt;/h1&gt;
&lt;p&gt;Comming Soon!&lt;/p&gt;
</description>
        <pubDate>Tue, 28 Jul 2020 00:00:00 +0000</pubDate>
        <link>/feat_project_jekyll_blog/</link>
        <guid isPermaLink="true">/feat_project_jekyll_blog/</guid>
        
        <category>web</category>
        
        
        <category>project</category>
        
      </item>
    
      <item>
        <title>웹 : 동기 그리고 비동기</title>
        <description>&lt;h1 id=&quot;싱글-스레드&quot;&gt;싱글 스레드&lt;/h1&gt;
&lt;h2 id=&quot;갑자기-싱글-스레드-동기-비동기라며&quot;&gt;갑자기 싱글 스레드? 동기, 비동기라며!?&lt;/h2&gt;
&lt;p&gt;프로그래밍 입문을 C, 자바로 해온 나는 자바스크립트를 배우는 지금 자바스크립트에 대한 첫 인상은 forEach에 대한 의아함 이었다. for 문이 잘 돌아가는데 굳이..?
 최근 동기, 비동기 이슈에 대한 공부를 한 후 해당 의아함을 어느정도 풀 수 있었다.&lt;/p&gt;

&lt;p&gt;웹에서 버튼을 눌렀는데, 웹이 멈췄다. 그래서 버튼을 여러번 눌렀다. 답답한 시간이 지나고 난 뒤 버튼이 동작한다. 근데 여러번 동작한다. 그러면 안된다.  &lt;br /&gt;&lt;br /&gt; 답답하니까… &lt;br /&gt;&lt;br /&gt;
 사실 이 문제는 여러 프로그램을 동작시키는 운영체제를 보면 금세 해결할수 있다. 즉 멀티스레드를 통해서 말이다. 그런데 자바스크립트는 싱글 스레드 기반 언어이다. 그렇다면 문제를 해결 할수 없는 것일까?&lt;/p&gt;

&lt;h2 id=&quot;콜백-동기-비동기&quot;&gt;콜백, 동기 비동기&lt;/h2&gt;
&lt;p&gt;아니다.
 현재 웹 전체가 멈추는 현상에 대한 기억 없이 잘 쓰고 있는 걸 보면 말이다.&lt;/p&gt;

&lt;p&gt;아마도 위의 문제를 해결하기 위해 콜백함수와 비동기식 개발이 나온것 으로 이해했다. 그러고나니 처음 forEach에 대한 의아함은 해결 되었다.&lt;/p&gt;

&lt;h1 id=&quot;비동기&quot;&gt;비동기&lt;/h1&gt;
&lt;p&gt;그래서 비동기식 개발이란게 무엇일까?&lt;/p&gt;

&lt;p&gt;함수를 만들고 동작 대한 해당 정보를 어떤 곳에 보내버린다. 그리고 하나의 콜스택을 가지고 있는 자바스크립트에서 해당 함수는 보냄으로써 동작을 다 했기 때문에 콜스택에서 사라진다. 보내진 어떤 곳에서 처리를 한 후 다시 자바스크립트에 보낸다. 자바스크립트는 콜백 큐에 해당 정보를 받아서 콜 스택이 비워져 있을 떄(!) event loop는 콜스택에 보낸다.&lt;/p&gt;

&lt;p&gt;위의 일련의 과정이 비동식이라 한다.&lt;/p&gt;

&lt;p&gt;여기서 끝나지 않는다.&lt;/p&gt;

&lt;p&gt;사실 브라우저는 개발된 자바스크립트를 가지고 렌더링을 해야 하는데, 이 repaint 하는 동작 또한 콜백 큐와 같이 동작 한다. 콜 스택이 비워져 있을 때(!) repaint 하는 것이다.&lt;/p&gt;

&lt;h1 id=&quot;결론&quot;&gt;결론&lt;/h1&gt;
&lt;p&gt;위와 같은 내용을 숙지하여 웹 개발을 진행하며 UI를 만들 때, event loop를 막아 버려서 브라우저가 할일을 못하게 되지 않도록, 유동적인 UI를 만들어 보자.&lt;/p&gt;
</description>
        <pubDate>Sat, 11 Jul 2020 00:00:00 +0000</pubDate>
        <link>/study_FE_Syn&ASyn/</link>
        <guid isPermaLink="true">/study_FE_Syn&ASyn/</guid>
        
        <category>c</category>
        
        <category>java</category>
        
        
        <category>study</category>
        
      </item>
    
      <item>
        <title>슬라이드 효과</title>
        <description>&lt;h1 id=&quot;이미지-슬라이드&quot;&gt;이미지 슬라이드&lt;/h1&gt;

&lt;p&gt;FE를 구성하다보면 가장 대표적으로 필요한 기능이 바로 슬라이드다.
 버튼식 슬라이드, 무한 슬라이드 등등.&lt;/p&gt;

&lt;p&gt;찾아보니 역시 방법은 천차만별이어서 공부한 바를 작성해 둔다.&lt;/p&gt;

&lt;h2 id=&quot;width--calc&quot;&gt;width : Calc()&lt;/h2&gt;
&lt;p&gt;사용하고자 할 자식노드들의(이미지) width를 모두 25%로 맞춘다음
 해당 부모노드에서 width를 4배한 값 calc(400%)으로 맞추면 이미지들은 100%가 되게 된다.&lt;/p&gt;

&lt;p&gt;이때 margin-left를 -100 * n % 순서대로 바꾸게 되면 각 이미지들을 가리키게 된다.&lt;/p&gt;

&lt;p&gt;아주 간편하다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;기준점이 설정되어 있기 때문에 한번은 초기화를 해줘야 한다.&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;translate3d-이용&quot;&gt;translate3d() 이용&lt;/h2&gt;
&lt;p&gt;width :Calc와 같은 매커니즘이다.
transform의 translate3d(x축, y축, z축) 에서 조절하고 싶은 축을 조절하면 된다.&lt;/p&gt;

</description>
        <pubDate>Fri, 10 Jul 2020 00:00:00 +0000</pubDate>
        <link>/study_FE_slide/</link>
        <guid isPermaLink="true">/study_FE_slide/</guid>
        
        <category>c</category>
        
        <category>java</category>
        
        
        <category>study</category>
        
      </item>
    
      <item>
        <title>Fade Out</title>
        <description>&lt;h1 id=&quot;사라지기&quot;&gt;사라지기&lt;/h1&gt;

&lt;p&gt;단순히 hover시 사라지는 것보다, className 변경에 따른 fade out 효과를 공부해 보자.&lt;/p&gt;

&lt;h2 id=&quot;css에서-제공한다&quot;&gt;CSS에서 제공한다.&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;-webkit-transition: opacity 3s ease-in-out;
-moz-transition: opacity 3s ease-in-out;
-ms-transition: opacity 3s ease-in-out;
-o-transition: opacity 3s ease-in-out;

opacity: 0;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Thu, 09 Jul 2020 00:00:00 +0000</pubDate>
        <link>/feat_study_FE_FadeOut/</link>
        <guid isPermaLink="true">/feat_study_FE_FadeOut/</guid>
        
        <category>web</category>
        
        
        <category>project</category>
        
      </item>
    
      <item>
        <title>CORS와 JSONP</title>
        <description>&lt;h1 id=&quot;json&quot;&gt;JSON&lt;/h1&gt;

&lt;p&gt;연습 프로젝트 작업 중 다음과 같은 경고문을 보았다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Access to XMLHttpRequest at 'http://#' from origin 'http://@' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;CORS 정책에 block 되었다는 건데, #의 도메인에서 XMLHttpRequest로 @도메인에 접근을 하게되면 보안상의 이유로 접근을 못하게 된다.&lt;/p&gt;

&lt;p&gt;Rest한 API을 만드는 작업 중 url에서 Json 파싱을 가능하게 하는 작업이 있다. 이때 해당 url은 database 객체 자료이기 때문에, 누구나 url을 요청하게 되면 해당 database를 public으로 이용하는 것이나 다름없게 된다. 이 같은 이유가 아마도 보안상의 이유라고 생각한다.&lt;/p&gt;

&lt;p&gt;내 경우는 파일 Http에서 작업하면서 XMLHttpRequest를 로컬 서버에 요청을 하다 보니 block 된 것이다.&lt;/p&gt;

&lt;p&gt;물론 로컬 서버에서 작업을 해도 되지만, 여러가지 이유로 도메인간 접근을 가능하게 해야할 경우가 많다. 때문에 당연히 알아야 할 내용이므로 공부하기로 한다.&lt;/p&gt;

&lt;p&gt;그렇다면 도메인간 XMLHttpRequest를 사용하려면 어떻게 해야 할까.&lt;/p&gt;

&lt;p&gt;// 공부하다보니 너무 어려워서 일단 보류&lt;/p&gt;

&lt;h1 id=&quot;cors&quot;&gt;CORS&lt;/h1&gt;

&lt;p&gt;경고문에서 설명하 듯 block 하는 CORS 정책을 해제해주는 방법이 존재한다.&lt;/p&gt;

&lt;p&gt;우선, 단순히 서버에서 CORS 정책을 해제하는 것으로 이해하고, 프레임워크에서 도와주는 것이 존재한다. 정도로 넘어가자.&lt;/p&gt;

&lt;p&gt;## @CrossOrigin
  Spring에서는 @RequestMapping 위에 @CrossOrigin(origins = “도메인 주소, 도메인 주소 … “) 로 사용하여 도와준다.&lt;/p&gt;

&lt;h1 id=&quot;jsonp&quot;&gt;JSONP&lt;/h1&gt;
&lt;p&gt;json 값을 js를 통해 주고 받게 만드는 방법이다. 우회의 일종이랄까.&lt;/p&gt;

</description>
        <pubDate>Wed, 08 Jul 2020 00:00:00 +0000</pubDate>
        <link>/study_FE_CORS&JSONP/</link>
        <guid isPermaLink="true">/study_FE_CORS&JSONP/</guid>
        
        <category>c</category>
        
        <category>java</category>
        
        
        <category>study</category>
        
      </item>
    
      <item>
        <title>쿠키와 세션</title>
        <description>&lt;h1 id=&quot;쿠키와-세션&quot;&gt;쿠키와 세션&lt;/h1&gt;
&lt;p&gt;Http는 한번 연결하고 나면 끊어진다. 그러나 웹동작에서 상태유지는 필수적인데 이를 위해 쿠키와 세션이 존재한다.&lt;/p&gt;

&lt;p&gt;쿠키 : 사용자 컴퓨터에 저장(정보 유출 우려)
  세션 : 서버에 저장&lt;/p&gt;
</description>
        <pubDate>Tue, 07 Jul 2020 00:00:00 +0000</pubDate>
        <link>/study_FE_Cookie&Session/</link>
        <guid isPermaLink="true">/study_FE_Cookie&Session/</guid>
        
        <category>c</category>
        
        <category>java</category>
        
        
        <category>study</category>
        
      </item>
    
      <item>
        <title>Graph [BFS, DFS]</title>
        <description>&lt;h1 id=&quot;큐-스택-트리&quot;&gt;큐, 스택, 트리&lt;/h1&gt;
&lt;p&gt;자바스크립트로 Queue, Stack, Tree를 구현해보자.&lt;/p&gt;

&lt;p&gt;## 큐 (Queue)
    큐(queue)는 다음과 같은 성질을 갖는 자료형입니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;데이터를 집어넣을 수 있는 선형(linear) 자료형입니다.
먼저 집어넣은 데이터가 먼저 나옵니다. 이 특징을 줄여서 FIFO(First In First Out)라고 부릅니다.
데이터를 집어넣는 enqueue, 데이터를 추출하는 dequeue 등의 작업을 할 수 있습니다.
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Queue&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;enqueue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;dequeue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;queue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;enqueue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;enqueue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;enqueue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dequeue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;## 스택 (Stack)
    스택(stack) 다음과 같은 성질을 갖는 자료형입니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;데이터를 집어넣을 수 있는 선형(linear) 자료형입니다.
나중에 집어넣은 데이터가 먼저 나옵니다. 이 특징을 줄여서 LIFO(Last In First Out)라고 부릅니다.
데이터를 집어넣는 push, 데이터를 추출하는 pop, 맨 나중에 집어넣은 데이터를 확인하는 peek 등의 작업을 할 수 있습니다.
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Stack&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;peek&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 3&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;## 트리 (Tree)&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;트리(tree)는 여러 데이터가 계층 구조 안에서 서로 연결된 형태를 나타낼 때 사용됩니다.


트리를 다룰 때 사용되는 몇 가지 용어를 살펴보겠습니다.

노드(node) - 트리 안에 들어있는 각 항목을 말합니다.
자식 노드(child node) - 노드는 여러 자식 노드를 가질 수 있습니다.
부모 노드(parent node) - 노드 A가 노드 B를 자식으로 갖고 있다면, 노드 A를 노드 B의 '부모 노드'라고 부릅니다.
뿌리 노드(root node) - 트리의 가장 상층부에 있는 노드를 말합니다.
잎 노드(leaf node) - 자식 노드가 없는 노드를 말합니다.
조상 노드(ancestor node) - 노드 A의 자식을 따라 내려갔을 때 노드 B에 도달할 수 있다면, 노드 A를 노드 B의 조상 노드라고 부릅니다.
자손 노드(descendant node) - 노드 A가 노드 B의 조상 노드일 때, 노드 B를 노드 A의 자손 노드라고 부릅니다.
형제 노드(sibling node) - 같은 부모 노드를 갖는 다른 노드를 보고 형제 노드라고 부릅니다.
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Node&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;children&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;children&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tree&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;world&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;fun&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;javascript!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;traverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;child&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;traverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;traverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// hello world and fun javascript!&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Mon, 06 Jul 2020 00:00:00 +0000</pubDate>
        <link>/study_CODE_Stack,Queue.Tree/</link>
        <guid isPermaLink="true">/study_CODE_Stack,Queue.Tree/</guid>
        
        <category>programming</category>
        
        <category>javascript</category>
        
        
        <category>study</category>
        
      </item>
    
  </channel>
</rss>
